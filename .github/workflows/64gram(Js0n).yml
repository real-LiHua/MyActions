name: 64gram(Js0n)

on:
  workflow_dispatch:
    inputs:
      chosen-os:
        required: true
        type: choice
        options:
        - Linux
        - macOS
        - Windows
      YOUR_API_ID:
        required: true
        default: '2040'
        type: string
      YOUR_API_HASH:
        required: true
        default: 'b18441a1ff607e10a989891a5462e627'
        type: string
        
permissions:
  packages: write
  
jobs:
  docker:
    name: docker
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: ghcr.io/real-lihua/64gram_js0n/centos_env:latest

    steps:
      - name: Clone.
        uses: actions/checkout@v4
        with:
          repository: JasonKhew96/64gram
          submodules: recursive

      - name: First set up.
        run: |
          sudo apt update
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Free up some disk space.
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be

      - name: Docker image build.
        run: |
          cd Telegram/build/docker/centos_env
          rm poetry.lock
          poetry install
          DEBUG= LTO= poetry run gen_dockerfile | DOCKER_BUILDKIT=1 docker build -t $IMAGE_TAG -

      - name: Push the Docker image.
        if: ${{ github.ref_name == github.event.repository.default_branch }}
        run: docker push $IMAGE_TAG

  linux:
    name: linux
    if: ${{ inputs.chosen-os == 'Linux' }}
    runs-on: ubuntu-latest
    needs: docker
    strategy:
      matrix:
        defines:
          - ""
          - "DESKTOP_APP_DISABLE_X11_INTEGRATION"

    env:
      UPLOAD_ARTIFACT: "true"

    steps:
      - name: Clone.
        uses: actions/checkout@v4
        with:
          repository: JasonKhew96/64gram
          submodules: recursive
        
      - name: Free up some disk space.
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be
        
      - name: Telegram Desktop build.
        run: |
          docker pull ghcr.io/real-lihua/64gram_js0n/centos_env
          docker tag ghcr.io/real-lihua/64gram_js0n/centos_env tdesktop:centos_env
          cd $REPO_NAME

          DEFINE=""
          if [ -n "${{ matrix.defines }}" ]; then
            DEFINE="-D ${{ matrix.defines }}=ON"
            echo Define from matrix: $DEFINE
            echo "ARTIFACT_NAME=Telegram_${{ matrix.defines }}" >> $GITHUB_ENV
          else
            echo "ARTIFACT_NAME=Telegram" >> $GITHUB_ENV
          fi
          

          docker run --rm -it \
          -u $(id -u) \
          -v "$PWD:/usr/src/tdesktop" \
          tdesktop:centos_env \
          /usr/src/tdesktop/Telegram/build/docker/centos_env/build.sh \
          -D TDESKTOP_API_ID=${{ inputs.YOUR_API_ID }} \
          -D TDESKTOP_API_HASH=${{ inputs.YOUR_API_HASH }}

      - uses: actions/upload-artifact@v4
        if: env.UPLOAD_ARTIFACT == 'true'
        name: Upload artifact.
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.REPO_NAME }}/out/Release

      - env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        run: |
          if [ ! -z "${{ secrets.BOT_TOKEN }}" ]; then
            ls -l ${{ env.REPO_NAME }}/out/Release
            export Release=$(ls ${{ env.REPO_NAME }}/out/Release/*)
            curl -v "https://api.telegram.org/bot${BOT_TOKEN}/sendMediaGroup?chat_id=${CHAT_ID}&media=%5b%7b%22type%22%3a%22document%22%2c+%22media%22%3a%22attach%3a%2f%2frelease%22%7d%5d" -F Release="@$release"
          fi
